// lib/constants.js

const MSG_TYPE = {
  // 通用
  ERROR: 'ERROR',
  WARNING: 'WARNING',

  // 连接与认证
  CLIENT_KEY_ASSIGNED: 'CLIENT_KEY_ASSIGNED', // 服务器 -> 客户端: 分配的客户端密钥
  CLIENT_DISCONNECTED: 'CLIENT_DISCONNECTED', // 服务器/客户端 -> 客户端/服务器: 客户端断开连接
  LOGIN: 'LOGIN', // 客户端 -> 服务器: 登录请求

  // 客户端管理
  GET_ALL_CLIENT_KEYS: 'GET_ALL_CLIENT_KEYS', // 获取所有客户端密钥（用于服务器内部管理）
  GET_CLIENT_KEY: 'GET_CLIENT_KEY', // 获取单个客户端的密钥
  GET_CLIENT_LIST: 'GET_CLIENT_LIST',
  GENERATE_CLIENT_KEY: 'GENERATE_CLIENT_KEY',
  REMOVE_CLIENT_KEY: 'REMOVE_CLIENT_KEY',
  UPDATE_CONNECTED_CLIENTS: 'UPDATE_CONNECTED_CLIENTS', // 服务器 -> 管理前端/SillyTavern：客户端连接/断开/更新
  CONNECTED_CLIENTS_UPDATE: "CONNECTED_CLIENTS_UPDATE",// 服务器 -> 客户端: 更新已连接客户端列表（用于客户端显示）

  // 房间管理
  ADD_CLIENT_TO_ROOM: 'ADD_CLIENT_TO_ROOM',
  ASSIGN_EXTENSION_TO_CLIENT: 'ASSIGN_EXTENSION_TO_CLIENT',
  AVAILABLE_EXTENSIONS: 'AVAILABLE_EXTENSIONS',
  CREATE_ROOM: 'CREATE_ROOM',
  DELETE_ROOM: 'DELETE_ROOM',
  GET_ASSIGNMENTS: 'GET_ASSIGNMENTS',
  GET_CLIENTS_IN_ROOM: 'GET_CLIENTS_IN_ROOM',
  GET_CONNECTION_POLICY: 'GET_CONNECTION_POLICY',
  GET_CONNECTED_CLIENT_ROOMS: 'GET_CONNECTED_CLIENT_ROOMS',
  GET_CONNECTED_EXTENSIONS: 'GET_CONNECTED_EXTENSIONS',
  GET_ROOMS: 'GET_ROOMS',
  MEMBER_JOINED: 'MEMBER_JOINED',
  MEMBER_LEFT: 'MEMBER_LEFT',
  KICK_MEMBER: 'KICK_MEMBER',
  SET_MEMBER_ROLE: 'SET_MEMBER_ROLE',
  MEMBER_ROLE_CHANGED: 'MEMBER_ROLE_CHANGED',
  REMOVE_CLIENT_FROM_ROOM: 'REMOVE_CLIENT_FROM_ROOM',
  SET_CONNECTION_POLICY: 'SET_CONNECTION_POLICY',
  GET_ASSIGNMENTS_FOR_ROOM: 'GET_ASSIGNMENTS_FOR_ROOM',

  // LLM 聊天
  GET_OFFLINE_MESSAGES: 'GET_OFFLINE_MESSAGES', // 客户端 -> 服务器: 获取断连前的消息
  OFFLINE_MESSAGES: 'OFFLINE_MESSAGES', // 服务器 -> 客户端: 离线消息
  LLM_REQUEST: 'LLM_REQUEST', // 客户端/服务器 -> 服务器/SillyTavern：LLM 对话请求
  NEW_MESSAGE: 'NEW_MESSAGE',
  SET_MESSAGE_REQUEST_MODE: 'SET_MESSAGE_REQUEST_MODE',
  EDIT_MESSAGE: 'EDIT_MESSAGE',
  DELETE_MESSAGE: 'DELETE_MESSAGE',
  CLEAR_MESSAGES: 'CLEAR_MESSAGES',
  UPDATE_CONTEXT: 'UPDATE_CONTEXT',

  // SillyTavern 相关
  CLIENT_SETTINGS: 'CLIENT_SETTINGS', // SillyTavern -> 服务器：客户端设置
  GET_SILLYTAVERN_EXTENSION: "GET_SILLYTAVERN_EXTENSION",
  IDENTIFY_SILLYTAVERN: 'IDENTIFY_SILLYTAVERN', // SillyTavern -> 服务器: 身份标识

  // 函数调用
  FUNCTION_CALL: 'FUNCTION_CALL', // 客户端 -> 服务器：函数调用

  // debug 命名空间
  DEBUG_MODE_CHANGED: 'DEBUG_MODE_CHANGED',
  READ_LOG: 'READ_LOG',
  SERVER_STATUS: 'SERVER_STATUS',
  TOGGLE_DEBUG_MODE: 'TOGGLE_DEBUG_MODE',

  // 流式消息类型 (SillyTavern扩展端和服务器之间的流式传输)
  NON_STREAM: 0,
  STREAM_DATA: 2,
  STREAM_DATA_FIRST: 4,
  STREAM_DATA_LAST: 6,
  STREAM_DATA_MIDDLE: 5,
  STREAM_DATA_RETRY: 7,
  STREAM_DATA_FAILED: 8,
  STREAM_END: 3,
  STREAM_START: 1,
};

const STREAM_EVENTS = {
  // SillyTavern -> 服务器
  DATA_FAILED: 'CLIENT_STREAM_DATA_FAILED',
  DATA_FIRST: 'CLIENT_STREAM_DATA_FIRST',
  DATA_LAST: 'CLIENT_STREAM_DATA_LAST',
  DATA_MIDDLE: 'CLIENT_STREAM_DATA_MIDDLE',
  DATA_RETRY: 'CLIENT_STREAM_DATA_RETRY',
  END: 'CLIENT_STREAM_END',
  START: 'CLIENT_STREAM_START',

  // 服务器 -> 客户端
  streamed_data: 'SERVER_STREAM_DATA',
  streamed_end: 'SERVER_STREAM_END',
};

const NAMESPACES = {
  AUTH: '/auth',
  CLIENTS: '/clients',
  DEBUG: '/debug',
  DEFAULT: '/',
  FUNCTION_CALL: '/function_call',
  LLM: '/llm',
  ROOMS: '/rooms',
  SILLY_TAVERN: '/sillytavern',
};

const EVENTS = {
  // 通用事件 (General)
  SERVER_START: 'SERVER_START',
  SERVER_STOP: 'SERVER_STOP',
  CONFIG_LOADED: 'CONFIG_LOADED',
  CONFIG_SAVED: 'CONFIG_SAVED',
  ERROR: 'ERROR', // 通用错误
  WARNING: 'WARNING', // 通用警告

  // 连接与认证 (Connection & Authentication)
  CLIENT_CONNECTING: 'CLIENT_CONNECTING',
  CLIENT_CONNECTED: 'CLIENT_CONNECTED',
  CLIENT_RECONNECTING: 'CLIENT_RECONNECTING',
  CLIENT_RECONNECTED: 'CLIENT_RECONNECTED',
  CLIENT_DISCONNECTED: 'CLIENT_DISCONNECTED',
  CLIENT_AUTHENTICATED: 'CLIENT_AUTHENTICATED',
  CLIENT_AUTH_FAILED: 'CLIENT_AUTH_FAILED',
  AUTH_ERROR: 'AUTH_ERROR',

  // 客户端管理 (Client Management)
  CLIENT_ADDED: 'CLIENT_ADDED',
  CLIENT_REMOVED: 'CLIENT_REMOVED',
  CLIENT_LIST_REQUEST: 'CLIENT_LIST_REQUEST',
  CLIENT_LIST_RESPONSE: 'CLIENT_LIST_RESPONSE',
  CLIENT_KEY_REQUEST: 'CLIENT_KEY_REQUEST',
  CLIENT_KEY_GENERATED: 'CLIENT_KEY_GENERATED',
  CLIENT_KEY_REMOVED: 'CLIENT_KEY_REMOVED',
  CLIENT_KEY_ASSIGNED: 'CLIENT_KEY_ASSIGNED',
  UPDATE_CONNECTED_CLIENTS: 'UPDATE_CONNECTED_CLIENTS',

  // 房间管理 (Room Management)
  ROOM_CREATED: 'ROOM_CREATED',
  ROOM_DELETED: 'ROOM_DELETED',
  ROOM_JOINED: 'ROOM_JOINED',
  ROOM_LEFT: 'ROOM_LEFT',
  ROOM_LIST_REQUEST: 'ROOM_LIST_REQUEST',
  ROOM_LIST_RESPONSE: 'ROOM_LIST_RESPONSE',
  ROOM_ERROR: 'ROOM_ERROR',
  MEMBER_JOINED: 'MEMBER_JOINED',  // 成员加入房间 (可以复用 ROOM_JOINED)
  MEMBER_LEFT: 'MEMBER_LEFT',      // 成员离开房间 (可以复用 ROOM_LEFT)
  MEMBER_ROLE_CHANGED: 'MEMBER_ROLE_CHANGED', // 新增：成员角色变更
  MEMBER_KICKED: 'MEMBER_KICKED',       // 新增：成员被踢出
  MEMBER_MUTED: 'MEMBER_MUTED',         // 新增：成员被禁言
  MEMBER_UNMUTED: 'MEMBER_UNMUTED',     // 新增: 成员解除禁言

  // LLM 聊天 (LLM Chat)
  LLM_REQUEST_RECEIVED: 'LLM_REQUEST_RECEIVED',
  LLM_REQUEST_SENT: 'LLM_REQUEST_SENT',
  LLM_REQUEST_FAILED: 'LLM_REQUEST_FAILED',
  LLM_RESPONSE_RECEIVED: 'LLM_RESPONSE_RECEIVED',
  LLM_RESPONSE_SENT: 'LLM_RESPONSE_SENT',
  LLM_RESPONSE_FAILED: 'LLM_RESPONSE_FAILED',
  MESSAGE_ADDED: 'MESSAGE_ADDED',
  MESSAGE_EDITED: 'MESSAGE_EDITED',  // 消息被编辑 (服务器 -> 客户端)
  MESSAGE_DELETED: 'MESSAGE_DELETED', // 消息被删除 (服务器 -> 客户端)
  MESSAGES_CLEARED: 'MESSAGES_CLEARED',   // 新增：消息被清空 (服务器 -> 客户端)
  OFFLINE_MESSAGES_REQUEST: 'OFFLINE_MESSAGES_REQUEST',
  OFFLINE_MESSAGES_SENT: 'OFFLINE_MESSAGES_SENT',

  // 流式传输 (Streaming)
  STREAM_START: 'STREAM_START',
  STREAM_DATA: 'STREAM_DATA',
  STREAM_END: 'STREAM_END',
  STREAM_ERROR: 'STREAM_ERROR',
  STREAM_DATA_FIRST: 'STREAM_DATA_FIRST',
  STREAM_DATA_MIDDLE: 'STREAM_DATA_MIDDLE',
  STREAM_DATA_LAST: 'STREAM_DATA_LAST',
  STREAM_DATA_RETRY: 'STREAM_DATA_RETRY',
  STREAM_DATA_FAILED: 'STREAM_DATA_FAILED',

  // SillyTavern 相关 (SillyTavern Specific)
  EXTENSION_CONNECTED: 'EXTENSION_CONNECTED',
  EXTENSION_DISCONNECTED: 'EXTENSION_DISCONNECTED',
  EXTENSION_IDENTIFIED: 'EXTENSION_IDENTIFIED',
  EXTENSION_LIST_REQUEST: 'EXTENSION_LIST_REQUEST',
  EXTENSION_LIST_RESPONSE: 'EXTENSION_LIST_RESPONSE',
  CLIENT_SETTINGS_RECEIVED: 'CLIENT_SETTINGS_RECEIVED',

  // 函数调用 (Function Call)
  FUNCTION_CALL_REQUEST: 'FUNCTION_CALL_REQUEST',
  FUNCTION_CALL_RESPONSE: 'FUNCTION_CALL_RESPONSE',
  FUNCTION_CALL_WARN: 'FUNCTION_CALL_WARN',
  FUNCTION_CALL_ERROR: 'FUNCTION_CALL_ERROR',

  // 调试 (Debug)
  DEBUG_MODE_ENABLED: 'DEBUG_MODE_ENABLED',
  DEBUG_MODE_DISABLED: 'DEBUG_MODE_DISABLED',
  SERVER_STATUS_REQUEST: 'SERVER_STATUS_REQUEST',
  SERVER_STATUS_RESPONSE: 'SERVER_STATUS_RESPONSE',
  LOG_READ_REQUEST: 'LOG_READ_REQUEST',
  LOG_READ_RESPONSE: 'LOG_READ_RESPONSE',
  DEBUG_MESSAGE: 'DEBUG_MESSAGE', // 通用调试消息

  // 连接策略 (Connection Policy)
  CONNECTION_POLICY_SET: 'CONNECTION_POLICY_SET',
  EXTENSION_ASSIGNED: 'EXTENSION_ASSIGNED',
  ASSIGNMENTS_GET: 'ASSIGNMENTS_GET',
  AVAILABLE_EXTENSIONS_UPDATE: 'AVAILABLE_EXTENSIONS_UPDATE',
  CLIENT_ROOMS_UPDATE: 'CLIENT_ROOMS_UPDATE',

  //消息请求模式
  MESSAGE_REQUEST_MODE_SET: 'MESSAGE_REQUEST_MODE_SET',

  // 服务器内部
  CONFIG_LOADED: 'CONFIG_LOADED',
  CONFIG_SAVED: 'CONFIG_SAVED',
  FUNCTION_REGISTER: 'FUNCTION_REGISTER',

};

// 导出时按字母顺序排列，方便查找
export { EVENTS, MSG_TYPE, NAMESPACES, STREAM_EVENTS };